name: ubuntu

on:
  push:
    branches:
      - develop
      - master
      - release/*
  pull_request:
  workflow_dispatch:

jobs:
  ci_test_clang:
    runs-on: ubuntu-latest
    # container: ghcr.io/nlohmann/json-ci:v2.3.0
    steps:
      - uses: actions/checkout@v3
      - uses: seanmiddleditch/gha-setup-ninja@master
      - name: cmake
        run: cmake --preset=clang-ci -S .
      - name: build
        run: cmake --build build --target all

  # ci_test_gcc:
  #   runs-on: ubuntu-latest
  #   # container: ghcr.io/nlohmann/json-ci:v2.3.0
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: seanmiddleditch/gha-setup-ninja@master
  #     - name: CMake
  #       run: cmake -S . -B build_gcc_ci -DTPH_CI=On
  #     - name: Build
  #       run: cmake --build build_gcc_ci --target ci_test_gcc

  ci_test_gcc:
    runs-on: ubuntu-latest
    # container: ghcr.io/nlohmann/json-ci:v2.3.0
    steps:
      - uses: actions/checkout@v3
      - uses: seanmiddleditch/gha-setup-ninja@master
      # - name: Latest GCC
      #   uses: egor-tensin/setup-gcc@v1
      #   with:
      #     version: latest
      #     platform: x64     
      - name: Install gcc-11
        run: |
          sudo apt update
          sudo apt install gcc-11 g++-11
        shell: bash 
      - name: CMake
        run: cmake --preset=gcc-ci S . -DCMAKE_C_COMPILER=gcc-11 -DCMAKE_CXX_COMPILER=g++-11
      - name: Build
        #run: cmake --build build/gcc_ci --target ci_test_gcc
        run: cmake --build build --target all

  ci_test_standards:
    runs-on: ubuntu-latest
    #container: ghcr.io/nlohmann/json-ci:v2.3.0
    strategy:
      matrix:
        compiler: [gcc, clang]
        standard: [11, 14, 17]
        #standard: [11, 14, 17, 20]
    steps:
      - uses: actions/checkout@v3
      - uses: seanmiddleditch/gha-setup-ninja@master
      - name: CMake
        run: cmake --preset=${{ matrix.compiler }}-ci -S . -DCMAKE_CXX_STANDARD=${{ matrix.standard }}
      - name: Build
        run: cmake --build build --target all
      - name: Test
        run: cd build && ctest --parallel 10 --output-on-failure

  # ci_static_analysis:
  #   runs-on: ubuntu-latest
  #   container: ghcr.io/nlohmann/json-ci:v2.3.0
  #   strategy:
  #     matrix:
  #       target: [ci_clang_tidy, ci_cppcheck, ci_test_valgrind, ci_test_clang_sanitizer, ci_test_amalgamation, ci_clang_analyze, ci_cpplint, ci_cmake_flags, ci_single_binaries, ci_reproducible_tests, ci_non_git_tests, ci_offline_testdata, ci_infer]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: cmake
  #       run: cmake -S . -B build -DTPH_CI=On
  #     - name: build
  #       run: cmake --build build --target ${{ matrix.target }}

  # ci_cmake_options:
  #   runs-on: ubuntu-latest
  #   container: ghcr.io/nlohmann/json-ci:v2.3.0
  #   strategy:
  #     matrix:
  #       target: [ci_test_diagnostics, ci_test_noexceptions, ci_test_noimplicitconversions]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: cmake
  #       run: cmake -S . -B build -DTPH_CI=On
  #     - name: build
  #       run: cmake --build build --target ${{ matrix.target }}

  # ci_test_coverage:
  #   runs-on: ubuntu-latest
  #   container: ghcr.io/nlohmann/json-ci:v2.3.0
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: cmake
  #       run: cmake -S . -B build -DTPH_CI=On
  #     - name: build
  #       run: cmake --build build --target ci_test_coverage
  #     - name: archive coverage report
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: code-coverage-report
  #         path: /__w/json/json/build/html
  #     - name: Coveralls
  #       uses: coverallsapp/github-action@master
  #       with:
  #         github-token: ${{ secrets.GITHUB_TOKEN }}
  #         path-to-lcov: /__w/json/json/build/json.info.filtered.noexcept

  # ci_test_compilers:
  #   runs-on: ubuntu-latest
  #   container: ghcr.io/nlohmann/json-ci:v2.3.0
  #   strategy:
  #     matrix:
  #       compiler: [g++-4.8, g++-4.9, g++-5, g++-6, g++-7, g++-8, g++-9, g++-10, clang++-3.5, clang++-3.6, clang++-3.7, clang++-3.8, clang++-3.9, clang++-4.0, clang++-5.0, clang++-6.0, clang++-7, clang++-8, clang++-9, clang++-10, clang++-11, clang++-12, clang++-13, clang++-14]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: cmake
  #       run: cmake -S . -B build -DTPH_CI=On
  #     - name: build
  #       run: cmake --build build --target ci_test_compiler_${{ matrix.compiler }}


