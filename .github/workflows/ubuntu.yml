name: ubuntu

on:
  push:
    branches:
      - develop
      - master
      - release/*
  pull_request:
  workflow_dispatch:

jobs:
  ci_test_clang:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: seanmiddleditch/gha-setup-ninja@master
      - name: Use clang-12
        run: |
          sudo apt install clang-12
          sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-12 100 --slave /usr/bin/clang++ clang++ /usr/bin/clang++-12
          sudo update-alternatives --set clang /usr/bin/clang-12        
      - name: CMake
        run: cmake --preset=clang-ci -S .
      - name: Build
        run: cmake --build --preset=clang-ci
      - name: Test
        run: ctest --preset=clang-ci

  ci_test_gcc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: seanmiddleditch/gha-setup-ninja@master
      - name: Use gcc-10
        run: |
          sudo apt install gcc-10 g++-10
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 100 --slave /usr/bin/g++ g++ /usr/bin/g++-10 --slave /usr/bin/gcov gcov /usr/bin/gcov-10
          sudo update-alternatives --set gcc /usr/bin/gcc-10        
      - name: CMake
        run: cmake --preset=gcc-ci -S .
      - name: Build
        run: cmake --build --preset=gcc-ci
      - name: Test
        run: ctest --preset=gcc-ci

  ci_test_standards:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [gcc, clang]
        standard: [11, 14, 17, 20]
    steps:
      - uses: actions/checkout@v3
      - uses: seanmiddleditch/gha-setup-ninja@master
      - name: (gcc) Use gcc-10 
        if: matrix.compiler == "gcc"
        run: |
          sudo apt install gcc-10 g++-10
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 100 --slave /usr/bin/g++ g++ /usr/bin/g++-10 --slave /usr/bin/gcov gcov /usr/bin/gcov-10
          sudo update-alternatives --set gcc /usr/bin/gcc-10        
      - name: Use clang-12
        if: matrix.compiler == "clang"
        run: |
          sudo apt install clang-12
          sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-12 100 --slave /usr/bin/clang++ clang++ /usr/bin/clang++-12
          sudo update-alternatives --set clang /usr/bin/clang-12        
      - name: CMake
        run: cmake --preset=${{ matrix.compiler }}-ci -S . -DCMAKE_CXX_STANDARD=${{ matrix.standard }}
      - name: Build
        run: cmake --build --preset=${{ matrix.compiler }}-ci
      - name: Test
        run: ctest --preset=${{ matrix.compiler }}-ci

  # ci_static_analysis:
  #   runs-on: ubuntu-latest
  #   container: ghcr.io/nlohmann/json-ci:v2.3.0
  #   strategy:
  #     matrix:
  #       target: [ci_clang_tidy, ci_cppcheck, ci_test_valgrind, ci_test_clang_sanitizer, ci_test_amalgamation, ci_clang_analyze, ci_cpplint, ci_cmake_flags, ci_single_binaries, ci_reproducible_tests, ci_non_git_tests, ci_offline_testdata, ci_infer]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: cmake
  #       run: cmake -S . -B build -DTPH_CI=On
  #     - name: build
  #       run: cmake --build build --target ${{ matrix.target }}

  # ci_cmake_options:
  #   runs-on: ubuntu-latest
  #   container: ghcr.io/nlohmann/json-ci:v2.3.0
  #   strategy:
  #     matrix:
  #       target: [ci_test_diagnostics, ci_test_noexceptions, ci_test_noimplicitconversions]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: cmake
  #       run: cmake -S . -B build -DTPH_CI=On
  #     - name: build
  #       run: cmake --build build --target ${{ matrix.target }}

  # ci_test_coverage:
  #   runs-on: ubuntu-latest
  #   container: ghcr.io/nlohmann/json-ci:v2.3.0
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: cmake
  #       run: cmake -S . -B build -DTPH_CI=On
  #     - name: build
  #       run: cmake --build build --target ci_test_coverage
  #     - name: archive coverage report
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: code-coverage-report
  #         path: /__w/json/json/build/html
  #     - name: Coveralls
  #       uses: coverallsapp/github-action@master
  #       with:
  #         github-token: ${{ secrets.GITHUB_TOKEN }}
  #         path-to-lcov: /__w/json/json/build/json.info.filtered.noexcept

  # ci_test_compilers:
  #   runs-on: ubuntu-latest
  #   container: ghcr.io/nlohmann/json-ci:v2.3.0
  #   strategy:
  #     matrix:
  #       compiler: [g++-4.8, g++-4.9, g++-5, g++-6, g++-7, g++-8, g++-9, g++-10, clang++-3.5, clang++-3.6, clang++-3.7, clang++-3.8, clang++-3.9, clang++-4.0, clang++-5.0, clang++-6.0, clang++-7, clang++-8, clang++-9, clang++-10, clang++-11, clang++-12, clang++-13, clang++-14]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: cmake
  #       run: cmake -S . -B build -DTPH_CI=On
  #     - name: build
  #       run: cmake --build build --target ci_test_compiler_${{ matrix.compiler }}


